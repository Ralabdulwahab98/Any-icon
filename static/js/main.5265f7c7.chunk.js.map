{"version":3,"sources":["components/HistoryList.js","components/HistoryContainer.js","components/ResultBox.js","components/SearchResult.js","components/UserAccount.js","components/UserLoginContainer.js","components/UserRegisterContainer.js","components/UsersContainer.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["HistoryList","props","className","onClick","onCloseItemClick","oneList","HistoryContainer","allHistoryList","this","historyList","map","task","index","key","closeClick","React","Component","ResultBox","state","onRemoveData","href","img","target","src","alt","SearchResult","allData","DATA","item","tags","raster_sizes","length","formats","preview_url","format","UserAccount","inputChange","e","setState","newItem","value","toggleEdit","console","log","username","type","placeholder","onChange","UserLoginContainer","usrnameInputChange","usrnameInput","passwordInputChange","passwordInput","checkUser","preventDefault","userName","userPass","UsersBD","usrname","password","toggleLog","userPassed","userAccout","UserRegisterContainer","addUser","UsersContainer","userLoginClicked","toggleLogin","toggle","toggleRegister","userRegisterClicked","user","dataUsers","localStorage","setItem","JSON","stringify","parse","getItem","Main","getData","data","url","axios","method","then","res","icons","catch","err","addItem","search","closeItemClick","searchIndex","indexOf","splice","historyListClicked","toggleHistory","userListClicked","toggleUser","removeData","oneData","dataIndex","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5265f7c7.chunk.js","sourcesContent":["// HistoryList\nimport React from 'react';\n\n    export default function HistoryList (props) {\n\n   \n  return (\n    <div >\n        <li className=\"list-group-item\"> \n        <span className=\"glyphicon glyphicon-trash\"\n        onClick = {props.onCloseItemClick} >\n         </span>\n         \n        {props.oneList}  </li>\n    </div>\n  );}\n","import React from 'react';\nimport HistoryList from './HistoryList';\n\nexport default class HistoryContainer extends React.Component {\n\n\n    render() {\n        const allHistoryList = this.props.historyList.map((task, index) => {\n            return <HistoryList\n                oneList={task}\n                key={index}\n                onCloseItemClick={() => this.props.onCloseItemClick(task)}\n            />\n        });\n\n        return (\n            <div className=\"div-HistoryContainer\" >\n                <ul className=\"d-inline-flex list-group\">\n                        <span className=\"close\" onClick={this.props.closeClick} >\n                        clear all </span> \n                        <div className=\"history-item\">\n                            {allHistoryList}\n                        </div>\n               \n                </ul>\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\n\nclass  ResultBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    \n    render() { \n        return ( \n        <div className=\"ResultBox\">\n\n             <span className=\"glyphicon glyphicon-trash imgdlet\"\n            onClick = {this.props.onRemoveData} >\n            </span>\n\n            <a href={`${this.props.img}`} target=\"_blank\">\n            <div className=\"imgDiv\">\n                <img src={`${this.props.img}`} alt=\"icon of API data \" />\n            </div>\n            </a>\n\n\n            {/* -- TAGS just to complet the Requirements -- */}\n            \n            {/* <label>TAG:\n                <input  \n                type='text'\n                placeholder=' your search tag'\n                // value= {this.props.tags.join('-')} \n                // onChange= {this.props.tags.join('-')} \n                // readOnly= {this.props.tags.join('-')}\n                // defaultValue={this.props.tags.join('-')}\n                />\n                <span className=\"glyphicon glyphicon-check\"\n                // onClick = {this.props.onRemoveData} \n                ></span>\n            </label> */}\n            \n                \n\n           \n\n        </div> );\n    }\n}\n \nexport default ResultBox;","import React from 'react';\nimport ResultBox from './ResultBox';\nclass SearchResult extends React.Component {\n\n    render() { \n\n        const allData = this.props.DATA.map( (item, key) => {\n                return <ResultBox\n                    key={key} \n                    tags = {item.tags}\n                   img = {item.raster_sizes[item.raster_sizes.length-1].formats[0].preview_url}\n                   format = {item.raster_sizes[item.raster_sizes.length-1].formats[0].format}\n                   onRemoveData={() => this.props.onRemoveData(item)}\n                   />\n                 });\n\n        let checkArrayEmpty ;\n        if( this.props.DATA.length <= 0 ){\n            checkArrayEmpty = <div className=\"SearchResult Empty\">\n        </div>\n        }else{\n            checkArrayEmpty = <div className=\"SearchResult\">\n            {allData}\n        </div>\n        }\n        return(checkArrayEmpty);\n\n    }\n\n}\n \nexport default SearchResult;\n\n\n","import React from 'react';\n\n\nexport default class UserAccount extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            newItem: '',\n            toggleEdit:'',\n\n        };\n    }\n\n    inputChange = (e) => { \n        this.setState({  newItem: e.target.value, });\n        // e.target.value=''   \n    }\n\n    render() {\n        console.log('<UserAccount/> nname= ', this.props.username)\n        console.log('<UserAccount/> tags =', this.props.tags)\n        return (\n            <div>\n                <p> Hi {this.props.username} </p>\n                <div className={`div-Edit-${this.state.toggleEdit}`}>\n                    <p> Edit  <span className=\"glyphicon glyphicon-edit\"></span> </p>\n\n                    <input\n                        type='text'\n                        placeholder=' new username'\n                        onChange={this.inputChange}\n                    ></input>\n\n                    <span className=\"glyphicon glyphicon-check\"></span>\n\n                    {/* onClick = {this.props.onRemoveData}  */}\n\n                    {/* <p> tags {this.props.tags.join(' - ')} </p> */}\n\n                </div>\n\n            </div>\n        );\n    }\n\n\n}","import React from 'react';\nimport UserAccount from './UserAccount';\n\nexport default class UserLoginContainer extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            usrnameInput: '',\n            passwordInput: '',\n            toggleLog:'disply',\n            username:'',\n            tags:[],\n            userPassed:false,\n        };\n\n    }\n\n    usrnameInputChange = (e) => { \n        this.setState({  usrnameInput: e.target.value, });\n    }\n    passwordInputChange = (e) => { \n        this.setState({  passwordInput: e.target.value, });  \n    }\n\n\n    checkUser = (e) => {\n        \n        e.preventDefault();\n        console.log('check user on database ');\n        const userName = this.state.usrnameInput;\n        const userPass = this.state.passwordInput;\n        const Tags = this.state.tags;\n\n        console.log('check user on database ');\n        console.log(' if ', userName);\n\n\n        this.props.UsersBD.map( (item,index)=> {\n\n            if( item.usrname === userName ){\n                console.log('you have account ', item.usrname ) ;\n                if( item.password === userPass ){\n                    console.log(' valid pass ' ) ;\n\n                    this.setState({\n                    toggleLog:'none',\n                    userPassed: true,\n                    username : item.usrname,\n                    tags : item.tags\n                    })\n                    \n\n                }else{\n                    // Alert\n                    console.log(' not valid pass ' ) ;\n\n                    \n                }\n            }else{\n                // Alert\n                console.log('you do not have account !') ;\n\n            }\n            \n                  \n            });\n    }\n\n    \n\n\n\n\n    render() { \n        let userAccout = null;\n\n        if(this.state.username) {\n            userAccout = \n            <UserAccount \n            username = {this.state.username } \n            tags = {this.state.tags }  />\n        }\n\n        return ( \n        <div>\n            <form className= {`login-${this.state.toggleLog}`}>\n\n                    <input type='text'\n                        placeholder='usrname'\n                        onChange={this.usrnameInputChange} /><br></br>\n\n                    <input type='text'\n                        placeholder='password'\n                        onChange={this.passwordInputChange} /><br></br>\n                    <button \n                    className=\"btn btn-info glyphicon glyphicon-ok\" \n                    onClick={this.checkUser} > \n                    </button>\n\n                   \n                </form>\n                {userAccout}\n            \n        </div> );\n    }    \n\n}","import React from 'react';\nimport UserAccount from './UserAccount';\n\nexport default class UserRegisterContainer extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            toggleLog:'disply',\n            usrnameInput: '',\n            passwordInput: '',\n            userPassed:false,\n        };\n\n    }\n\n    usrnameInputChange = (e) => { \n        this.setState({  usrnameInput: e.target.value, });\n        // e.target.defaultValue=''   \n    }\n    passwordInputChange = (e) => { \n        this.setState({  passwordInput: e.target.value, });\n        // e.target.defaultValue=''   \n    }\n\n    addUser = (e) => {\n        \n        e.preventDefault();\n       \n        \n        // const newuser = this.props.UsersBD;\n\n        if( ( this.state.usrnameInput === ''  || this.state.passwordInput === '')  ){\n            // Alert\n            console.log(' you have to fil input ');\n        }else{\n        \n        // Alert\n        console.log('Adding new user to database ');\n\n        this.props.addUser(\n            {'usrname': this.state.usrnameInput ,\n             'password': this.state.passwordInput,\n              'tags':[], \n            });\n        }\n        this.setState({\n            toggleLog:'none',\n            userPassed:true,\n        })\n\n\n    }\n\n    render() { \n        let userAccout = null;\n\n        if(this.state.userPassed) {\n            userAccout = \n            <UserAccount \n            username = {this.state.usrnameInput } \n            // tags = {this.state.tags }  \n            />\n        }\n        return ( \n        <div>\n            <form className= {`login-${this.state.toggleLog}`}>\n\n                    <input type='text'\n                        placeholder='usrname'\n                        onChange={this.usrnameInputChange} />\n\n                        <br></br>\n\n                    <input type='text'\n                        placeholder='password'\n                        onChange={this.passwordInputChange} />\n\n                        <br></br>\n\n                    <button \n                    className=\"btn btn-info glyphicon glyphicon-ok\" \n                    onClick={this.addUser} > \n                    </button>\n                   \n                </form>\n                {userAccout}\n            \n        </div> );\n    }    \n\n}","import React from 'react';\nimport UserLoginContainer from './UserLoginContainer'\nimport UserRegisterContainer from './UserRegisterContainer'\n\nexport default class UsersContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            toggle:'display',\n            toggleLogin:'none',\n            toggleRegister:'none',\n            dataUsers:JSON.parse( localStorage.getItem('users') ),\n         }\n    }\n\n\n    userLoginClicked = (e) => {\n        console.log('history List Div click');\n         if( this.state.toggleLogin === 'none'){\n            this.setState({ \n                toggleLogin:'display', \n                toggle:'none',\n                toggleRegister:'none' }); \n         }\n         else{\n             this.setState({ toggleLogin:'none' }); \n         }\n    }\n\n     userRegisterClicked = (e) => {\n        console.log('history List Div click');\n         if( this.state.toggleRegister === 'none'){\n            this.setState({ \n                toggleRegister:'display',\n                toggleLogin:'none' ,\n                toggle:'none', }); \n         }\n         else{\n             this.setState({ toggleRegister:'none' }); \n         }\n    }\n    addUser = (user) => {\n        this.setState({\n            dataUsers:[...this.state.dataUsers , user]\n        }, () => {\n            localStorage.setItem(\"users\",JSON.stringify( this.state.dataUsers ))\n        });\n    }\n\n    render() { \n        return ( \n        <div>\n\n            <ul className=\"d-inline-flex list-group\">\n\n                <span className={`users-container-${this.state.toggle}`} onClick={this.userLoginClicked } >\n                    Login </span> \n                    \n                <div className= {`user-account-${this.state.toggleLogin}`}>\n                         <UserLoginContainer\n                         UsersBD= {this.state.dataUsers} \n                         addUser= {this.addUser}\n                         /> \n                </div>\n            </ul>  \n\n\n\n            <ul className=\"d-inline-flex list-group\">\n                <span className={`users-container-${this.state.toggle}`} onClick={this.userRegisterClicked} >\n                    Register </span> \n\n                <div className= {`user-account-${this.state.toggleRegister}`}>\n                        <UserRegisterContainer \n                        UsersBD= {this.state.dataUsers}  \n                        addUser= {this.addUser}\n                        />\n                </div>\n            </ul>   \n\n\n        </div> );\n    }\n}\n ","import React from 'react';\nimport axios from \"axios\"\n\nimport HistoryContainer from './HistoryContainer';\nimport SearchResult from './SearchResult';\nimport UsersContainer from'./UsersContainer';\n\n\n\n// API\n// https://api.iconfinder.com/v3/\n// iconsets?\n// client_id=NvfBiIhJIHYvaAKF125ScaiL5YSZ7B4pE5JYx5slJaZXSYrUYfChDeQIOPBNOPdv\n// &\n//client_secret=kaZCwCWTX2ajcgAZqsdbBqZXljUvyst4WHCamfM70jF1ZNEXFV4vlM2fXBPSJpU4\n// &premium=0\n// &count=100\n \n\nexport default class Main extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            search: [],\n            newItem: '',\n            toggleHistory:'none',\n            toggleUser:'none',\n            data:[],\n\n        };\n    }\n\n   \n\n    getData = (data) => { \n        console.log(' get data from api work!! ')\n        const client_id ='client_id=NvfBiIhJIHYvaAKF125ScaiL5YSZ7B4pE5JYx5slJaZXSYrUYfChDeQIOPBNOPdv';\n        const client_secret = 'client_secret=kaZCwCWTX2ajcgAZqsdbBqZXljUvyst4WHCamfM70jF1ZNEXFV4vlM2fXBPSJpU4';\n       \n       const url = `https://api.iconfinder.com/v3/icons/search?${client_id}&${client_secret}&query=${this.state.newItem}&count=100&premium=0`;\n        console.log(\"URL:'\",url)\n          \n      axios({\n       method: 'get',\n       url: url\n         })\n         .then(res => { \n           console.log( 'Data: ',res.data.icons);\n           \n           this.setState({  data: res.data.icons });\n           \n         })\n         .catch(err => {\n           console.log('ERR',err);\n         });  \n        \n     }\n\n\n    addItem = (e) => {\n        \n        e.preventDefault();\n        console.log('Adding search item to Array Search');\n\n        this.setState({\n            search: [...this.state.search, this.state.newItem],\n            newItem: e.target.value,\n        });\n        // e.target.defaultValue=''\n        \n        this.getData(e.target.value);\n        \n\n    }\n\n    inputChange = (e) => { \n        this.setState({  newItem: e.target.value, });\n        // e.target.value=''   \n    }\n\n    closeClick = (e) => {\n        console.log('close ( clear all ) click', e.target);\n        this.setState({ search: [] });\n    }\n\n\n\n    closeItemClick = (item) => {\n        const search = [...this.state.search];\n        const searchIndex = search.indexOf(item);\n\n        console.log('close ( clear item ) click');\n\n        search.splice(searchIndex, 1);\n        this.setState({ search });\n    }\n\n\n    historyListClicked = (e) => {\n        console.log('history List Div click');\n         if( this.state.toggleHistory === 'none'){\n            this.setState({ toggleHistory:'display' }); \n         }\n         else{\n             this.setState({ toggleHistory:'none' }); \n         }\n    }\n\n    userListClicked = (e) => {\n        console.log('history List Div click');\n         if( this.state.toggleUser === 'none'){\n            this.setState({ toggleUser:'display' }); \n         }\n         else{\n             this.setState({ toggleUser:'none' }); \n         }\n    }\n\n    removeData = (oneData) =>{\n        const data = [...this.state.data];\n        const dataIndex = data.indexOf(oneData);\n\n        console.log('remove ( one item from data ) click');\n\n        data.splice(dataIndex, 1);\n        this.setState({ data });\n\n    }\n\n    render() {console.log(this.state.data);\n        return (\n            \n            <div className=\"d-block\">\n                \n                <div className=\"d-flex justify-content-center heder\" >\n\n                <form className=\"form\">\n                    <input type='text'\n                        placeholder='Search'\n                        \n                        onChange={this.inputChange} />\n\n                    <button className=\"btn btn-info\" onClick={this.addItem} > \n                    <span className=\"glyphicon glyphicon-search\"></span>  \n                    </button>\n                   \n                </form>\n\n                <div className=\"d-inline-flex flex-column History\">\n\n                    <button className=\"btn btn-info \"\n                    onClick={ this.historyListClicked }> History </button>\n\n                    <div className= {`HistoryContainer-${this.state.toggleHistory}`}>\n                        <HistoryContainer\n                        onCloseItemClick={this.closeItemClick}\n                        closeClick={this.closeClick}\n                        historyList={this.state.search} />\n                   </div>\n               \n                </div>\n                    \n                    <div className=\"d-inline-flex flex-column user\">\n\n                    <button className=\"btn btn-info \"\n                    onClick={ this.userListClicked }\n                    > \n                    <span className=\"glyphicon glyphicon-user\"></span>  \n                    </button>\n\n                    <div className= {`userContainer-${this.state.toggleUser}`}>\n                        <UsersContainer />\n                        </div>\n               \n             </div>\n                </div> \n\n\n\n                <div className=\"mainResult\">\n                    <h1>  {this.state.data.length} result </h1>\n                    <SearchResult  \n                    DATA= {this.state.data}\n                    onRemoveData={this.removeData}/>\n                </div>\n\n\n\n                \n\n\n\n            </div>\n\n                \n\n\n                \n\n        );\n\n    }\n\n}\n","import React from 'react';\nimport Main from './components/main';\nimport './App.css';\n\nexport default class App extends React.Component{\n\n\n\n  render(){\n  return (\n    <Main />\n  );}\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}